let's roll bro!!

ok so the first thing is the session logger
	I implemented a similar system for Neocities so I should probably start by checking out that pattern
		https://github.com/ClemsonTRACE/neocitiesV2/blob/master/src/App.js
	I need to clean up my GH badly ahah
	ok so looking at the Neocities session logger
		setInterval()
			if training
			else 
				if not waiver
					if global time < global session length
						if user is player A
							update time
					else
						final page
		ugh I need to stop listneing to songs with lyrics
			this MGMT remix is more like it
		ok so back to this
	the pattern should be very similar
		I still set the interval and check the state location 
			wait, don't I do this already?
		see, gt4t is all about url routing
			should I create an ad-hoc session logger just for 3pd?
				probably, I mean I guess I'd be down to move the logic into the App component if needs change
			uhm, and yet I need to add a new option of how many human players there are
				Ima add that to the container componennt, although it's gonna break the priors
				I'll just leave them a message to change the urls slightly 
		the alternative option is to treat it as a separate game like centipede
			that might be good actually
			let's see, what do I have to pass down?
			Yes!! It worked
	uhm, wait so let's build the 3PD first otherwise I'll get confused
		ok done with the url patterns
		damn it, looks like I have to implement this as a tree
			yeee, D3.js tree!
			so close!!! 
			hell yes!!! woot woot  
		OMG yes, I was able to transfter all of this to the component so it works!!

	currentScore was pretty easy
	Win rate is gonna be harder
		how many cases are there exactly?
			let's look at the server
				https://github.com/ClemsonTRACE/gameTheory4Teams/blob/master/games/utils.py
			it's 8 cases
		oh no!! the training was off 
			jk: 0 is cooperate and 1 is defect
		boom! done

let's do this!!!!
	ok so session loggin
	I guess this should happen in the intermediate step between signing the privacy form and actually seeing the game
		I can add a loader to the intermediate page
			why isn't it showing up? 
			uhm, what version of bootstrap am I using?
			ohhh, I"m using materialize
		now I have to make a function to check availability on firebase
			let's pull up again the line from the Neocities code
				https://github.com/ClemsonTRACE/neocitiesV2/blob/master/src/App.js
			ok so instead of making it an infite time loop, I should make it a while loop
				if possible
	what should this look like?
		sessionID {
			playerA: false,
			playerB: false,
			playerC: false,
		}

		this makes sense, except we don't really care about specific sessions like we did for Neocities
			or do we? after all, we have all human, 1 human, and 2 humans
			a way of doing that is by checking if "false" in sessionID{}, not caring about number
				yea, bc I want to avoid having to do individual url for each thing
			oh wait, I can already check the condition through the url

	the thing is, I am trying to make this as fast as possible
		the users should automatically go to the first session where they'd be getting started
		ok but then if there are no sessions like that, they should open up a new one
			evidenced by a new child on Firebase

	yea, I mean on some level this will be pretty easy bc all of this Firebase stuff is contained within that particular stage of the app

	so ideally I'd loop through the right child based on the url, looking for falses
		when I find one, I turn it true
		the loop continues to check false is not in that child
			when it's all true, the button will show up
			there has to be a state update in there
		solved by just doing "once" on Firebase

	ok so I have the right read on Firebase and the right loop
		now it's just a matter of checking and then updating correctly
		ok so everything is ready, I just have to ensure check() happens repeatly 
			soooo close
		ok come on, you are so close!

	what if put the check() in the Loader, and do a loop there? 





